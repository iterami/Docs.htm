<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>core.js</title>
<link href=../../../common/css/writings.css rel=stylesheet>

<a href=../../index.htm>iterami</a>/<a href=../index.htm>Docs.htm</a>/<a href=../index.htm>common</a>/<a href=../guides/htm.htm>HTM</a>/<a class=external href=https://github.com/iterami/common/blob/gh-pages/js/core.js rel=noopener>core.js</a>
<ul>
  <li><a href=#globals>Globals</a>
  <li><a href=#keybinds>Keybinds</a>
  <li>No requirements.
  <li>Functions:<ul>
    <li><a href=#core_ajax>core_ajax(args)</a>
    <li><a href=#core_args>core_args(args)</a>
    <li><a href=#core_call>core_call(args)</a>
    <li><a href=#core_digits_min>core_digits_min(args)</a>
    <li><a href=#core_escape>core_escape()</a>
    <li><a href=#core_events_bind>core_events_bind(args)</a>
    <li><a href=#core_events_keyinfo>core_events_keyinfo(event)</a>
    <li><a href=#core_events_rebind>core_events_rebind(args)</a>
    <li><a href=#core_events_todoloop>core_events_todoloop()</a>
    <li><a href=#core_file>core_file(args)</a>
    <li><a href=#core_handle_beforeunload>core_handle_beforeunload(event)</a>
    <li><a href=#core_handle_blur>core_handle_blur(event)</a>
    <li><a href=#core_handle_contextmenu>core_handle_contextmenu(event)</a>
    <li><a href=#core_handle_defaults>core_handle_defaults(args)</a>
    <li><a href=#core_handle_event>core_handle_event(args)</a>
    <li><a href=#core_handle_gamepadconnected>core_handle_gamepadconnected(event)</a>
    <li><a href=#core_handle_gamepaddisconnected>core_handle_gamepaddisconnected(event)</a>
    <li><a href=#core_handle_keydown>core_handle_keydown(event)</a>
    <li><a href=#core_handle_keyup>core_handle_keyup(event)</a>
    <li><a href=#core_handle_mousedown>core_handle_mousedown(event)</a>
    <li><a href=#core_handle_mousemove>core_handle_mousemove(event)</a>
    <li><a href=#core_handle_mouseup>core_handle_mouseup(event)</a>
    <li><a href=#core_handle_mousewheel>core_handle_mousewheel(event)</a>
    <li><a href=#core_handle_pointerlockchange>core_handle_pointerlockchange(event)</a>
    <li><a href=#core_hex_to_rgb>core_hex_to_rgb(args)</a>
    <li><a href=#core_html_format>core_html_format(args)</a>
    <li><a href=#core_html_modify>core_html_modify(args)</a>
    <li><a href=#core_html>core_html(args)</a>
    <li><a href=#core_image>core_image(args)</a>
    <li><a href=#core_init>core_init()</a>
    <li><a href=#core_interval_animationframe>core_interval_animationFrame(args)</a>
    <li><a href=#core_interval_modify>core_interval_modify(args)</a>
    <li><a href=#core_interval_pause_all>core_interval_pause_all()</a>
    <li><a href=#core_interval_pause>core_interval_pause(args)</a>
    <li><a href=#core_interval_remove_all>core_interval_remove_all()</a>
    <li><a href=#core_interval_remove>core_interval_remove(args)</a>
    <li><a href=#core_interval_resume_all>core_interval_resume_all()</a>
    <li><a href=#core_interval_resume>core_interval_resume(args)</a>
    <li><a href=#core_keys_updatebinds>core_keys_updatebinds(args)</a>
    <li><a href=#core_mouse_updatebinds>core_mouse_updatebinds(args)</a>
    <li><a href=#core_number_format>core_number_format(args)</a>
    <li><a href=#core_random_boolean>core_random_boolean(args)</a>
    <li><a href=#core_random_hex>core_random_hex(args)</a>
    <li><a href=#core_random_integer>core_random_integer(args)</a>
    <li><a href=#core_random_key>core_random_key(args)</a>
    <li><a href=#core_random_number>core_random_number(args)</a>
    <li><a href=#core_random_rgb>core_random_rgb()</a>
    <li><a href=#core_random_string>core_random_string(args)</a>
    <li><a href=#core_replace_multiple>core_replace_multiple(args)</a>
    <li><a href=#core_repo_init>core_repo_init(args)</a>
    <li><a href=#core_repo_reset>core_repo_reset()</a>
    <li><a href=#core_requestpointerlock>core_requestpointerlock(args)</a>
    <li><a href=#core_round>core_round(args)</a>
    <li><a href=#core_sort_custom>core_sort_custom(args)</a>
    <li><a href=#core_sort_numbers>core_sort_numbers(args)</a>
    <li><a href=#core_sort_property>core_sort_property(args)</a>
    <li><a href=#core_sort_random>core_sort_random(args)</a>
    <li><a href=#core_sort_strings>core_sort_strings(args)</a>
    <li><a href=#core_storage_add>core_storage_add(args)</a>
    <li><a href=#core_storage_element_property>core_storage_element_property(args)</a>
    <li><a href=#core_storage_reset>core_storage_reset()</a>
    <li><a href=#core_storage_save>core_storage_save()</a>
    <li><a href=#core_storage_update>core_storage_update(args)</a>
    <li><a href=#core_tab_create>core_tab_create(args)</a>
    <li><a href=#core_tab_switch>core_tab_switch(args)</a>
    <li><a href=#core_type>core_type(args)</a>
    <li><a href=#core_type_convert>core_type_convert(args)</a>
    <li><a href=#core_ui_update>core_ui_update(args)</a>
    <li><a href=#core_uri>core_uri(args)</a>
  </ul>
</ul>
<hr id=globals>
<table>
  <tr class=header>
    <td>Globals
    <td>Default
    <td>Type
  <tr>
    <td>core_events
    <td>{}
    <td>object
  <tr>
    <td>core_gamepads
    <td>{}
    <td>object
  <tr>
    <td>core_images
    <td>{}
    <td>object
  <tr>
    <td>core_intervals
    <td>{}
    <td>object
  <tr>
    <td>core_key_rebinds
    <td>{}
    <td>object
  <tr>
    <td>core_keys
    <td>{}
    <td>object
  <tr>
    <td>core_menu_block_events
    <td>true
    <td>boolean
  <tr>
    <td>core_menu_open
    <td>false
    <td>boolean
  <tr>
    <td>core_mode
    <td>0
    <td>number
  <tr>
    <td>core_mouse
    <td>{}
    <td>object
  <tr>
    <td>core_repo_title
    <td>''
    <td>string
  <tr>
    <td>core_reset_todo
    <td>false
    <td>boolean false or function
  <tr>
    <td>core_storage_data
    <td>{}
    <td>object
  <tr>
    <td>core_storage_info
    <td>{}
    <td>object
  <tr>
    <td>core_tabs
    <td>{}
    <td>object
  <tr>
    <td>core_tau
    <td>6.283185307179586
    <td>number
  <tr>
    <td>core_ui_values
    <td>{}
    <td>object
</table>
<hr id=keybinds>
<table>
  <tr class=header>
    <td>Keybinds
    <td>Default
    <td>Type
  <tr>
    <td>crouch
    <td>67
    <td>integer keycode
  <tr>
    <td>jump
    <td>32
    <td>integer keycode
  <tr>
    <td>move-←
    <td>65
    <td>integer keycode
  <tr>
    <td>move-↑
    <td>87
    <td>integer keycode
  <tr>
    <td>move-→
    <td>68
    <td>integer keycode
  <tr>
    <td>move-↓
    <td>83
    <td>integer keycode
  <tr>
    <td>reset
    <td>72
    <td>integer keycode
</table>
<hr id=core_ajax>
core_ajax(args)
<ul>
  <li>Initiates and handles AJAX requests.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>data
    <td>null
    <td>
  <tr>
    <td>readyState
    <td>4
    <td>number
  <tr>
    <td>status
    <td>200
    <td>number
  <tr>
    <td>todo
    <td>
    <td>function
  <tr>
    <td>type
    <td>'GET'
    <td>string
  <tr>
    <td>url
    <td>
    <td>string
</table>
<hr id=core_args>
core_args(args)
<ul>
  <li>Creates an "args" object with provided properties, populates it with additional optional default properties, and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>args
    <td>{}
    <td>object
  <tr>
    <td>defaults
    <td>{}
    <td>object
</table>
<hr id=core_call>
core_call(args)
<ul>
  <li>Calls a function if it exists. Used to prevent errors caused by undefined functions.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>args
    <td>void 0
    <td>void 0 or object
  <tr>
    <td>todo
    <td>
    <td>function
</table>
<hr id=core_digits_min>
core_digits_min(args)
<ul>
  <li>Returns a string containing a minimum number of digits.
  <li>Example: 7 with 3 minimum digits would become "007".
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>digits
    <td>2
    <td>number
  <tr>
    <td>number
    <td>
    <td>number
</table>
<hr id=core_escape>
core_escape()
<ul>
  <li>Pressing escape opens or closes the menu.
  <li>Pauses or resumes intervals depending on state.
  <li>Calls optional repository-specific <a href=main.htm#repo_escape>repo_escape()</a> function.
</ul>
<hr id=core_events_bind>
core_events_bind(args)
<ul>
  <li>Updates bindings to various events, including optional clearing.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>beforeunload
    <td>false
    <td>boolean false or function
  <tr>
    <td>clearkeys
    <td>false
    <td>boolean
  <tr>
    <td>clearmouse
    <td>false
    <td>boolean
  <tr>
    <td>elements
    <td>false
    <td>boolean false or object
  <tr>
    <td>keybinds
    <td>false
    <td>boolean false or object
  <tr>
    <td>mousebinds
    <td>false
    <td>boolean false or object
</table>
<hr id=core_events_keyinfo>
core_events_keyinfo(event)
<ul>
  <li>Returns keycode and character of fired keyboard event.
</ul>
<hr id=core_events_rebind>
core_events_rebind(args)
<hr id=core_events_todoloop>
core_events_todoloop()
<ul>
  <li>Function that runs looping keyboard and mouse event todos.
</ul>
<hr id=core_file>
core_file(args)
<ul>
  <li>Uses "FileReader" to read a file of any type, then passes the event to "todo()".
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>file
    <td>
    <td>string
  <tr>
    <td>todo
    <td>
    <td>function
  <tr>
    <td>type
    <td>'readAsDataURL'
    <td>string
</table>
<hr id=core_handle_beforeunload>
core_handle_beforeunload(event)
<ul>
  <li>If the result of the "beforeunload" event returns a string, this function returns it.
</ul>
<hr id=core_handle_blur>
core_handle_blur(event)
<hr id=core_handle_contextmenu>
core_handle_contextmenu(event)
<ul>
  <li>If the result of the "contextmenu" event doesn't return anything, this function returns "false".
</ul>
<hr id=core_handle_defaults>
core_handle_defaults(args)
<ul>
  <li>Recursively applies default values to "var" properties and subproperties.
  <li>If "var" isn't an object, then this function returns "var".
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>default
    <td>{}
    <td>object
  <tr>
    <td>var
    <td>{}
    <td>any
</table>
<hr id=core_handle_event>
core_handle_event(args)
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>event
    <td>
    <td>event
  <tr>
    <td>key
    <td>
    <td>string
  <tr>
    <td>object
    <td>
    <td>object
  <tr>
    <td>state
    <td>void 0
    <td>
  <tr>
    <td>todo
    <td>void 0
    <td>void 0 or function
</table>
<hr id=core_handle_gamepadconnected>
core_handle_gamepadconnected(event)
<hr id=core_handle_gamepaddisconnected>
core_handle_gamepaddisconnected(event)
<hr id=core_handle_keydown>
core_handle_keydown(event)
<hr id=core_handle_keyup>
core_handle_keyup(event)
<hr id=core_handle_mousedown>
core_handle_mousedown(event)
<hr id=core_handle_mousemove>
core_handle_mousemove(event)
<hr id=core_handle_mousemove>
core_handle_mousemove(event)
<hr id=core_handle_mouseup>
core_handle_mouseup(event)
<hr id=core_handle_mousewheel>
core_handle_mousewheel(event)
<hr id=core_handle_pointerlockchange>
core_handle_pointerlockchange(event)
<hr id=core_hex_to_rgb>
core_hex_to_rgb(args)
<ul>
  <li>Converts a hexadecimal string of length 3 or 6 to red, green, and blue, and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>hex
    <td>
    <td>string
</table>
<hr id=core_html>
core_html(args)
<ul>
  <li>Constructs and returns an HTML element.
  <li>Optionally can append/prepend it to a parent.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>parent
    <td>false
    <td>boolean false or string ID
  <tr>
    <td>properties
    <td>{}
    <td>object
  <tr>
    <td>todo
    <td>'append'
    <td>string
  <tr>
    <td>type
    <td>'div'
    <td>string
</table>
<hr id=core_html_format>
core_html_format(args)
<ul>
  <li>Replaces characters in a string that may cause HTML errors and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>string
    <td>
    <td>string
</table>
<hr id=core_html_modify>
core_html_modify(args)
<ul>
  <li>Assigns properties to an HTML element if it exists.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>properties
    <td>
    <td>object
</table>
<hr id=core_image>
core_image(args)
<ul>
  <li>Creates an image, begins asynchronous loading, and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>src
    <td>
    <td>string
  <tr>
    <td>todo
    <td>function(){}
    <td>function
</table>
<hr id=core_init>
core_init()
<ul>
  <li>Sets up universal project components, such as the core menu and events.
</ul>
<hr id=core_interval_animationframe>
core_interval_animationFrame(args)
<ul>
  <li>Continues running animation frames.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=core_interval_modify>
core_interval_modify(args)
<ul>
  <li>Creates or modifies an animation frame, interval, or timeout.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>animationFrame
    <td>false
    <td>boolean
  <tr>
    <td>clear
    <td>'clearInterval'
    <td>string
  <tr>
    <td>id
    <td>
    <td>string ID
  <tr>
    <td>interval
    <td>25
    <td>number
  <tr>
    <td>paused
    <td>false
    <td>boolean
  <tr>
    <td>set
    <td>'setInterval'
    <td>string
</table>
<hr id=core_interval_pause>
core_interval_pause(args)
<ul>
  <li>Pauses an animation frame, interval, or timeout.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=core_interval_pause_all>
ore_interval_pause_all()
<ul>
  <li>Pauses all animation frames, intervals, and timeouts.
</ul>
<hr id=core_interval_remove>
core_interval_remove(args)
<ul>
  <li>Pauses and removes an animation frame, interval, or timeout.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=core_interval_remove_all>
core_interval_remove_all()
<ul>
  <li>Pauses and removes all animation frames, intervals, and timeouts.
</ul>
<hr id=core_interval_resume>
core_interval_resume(args)
<ul>
  <li>Resumes a paused animation frame, interval, or timeout.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=core_interval_resume_all>
core_interval_resume_all()
<ul>
  <li>Resumes all paused animation frames, intervals, and timeouts.
</ul>
<hr id=core_keys_updatebinds>
core_keys_updatebinds(args)
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>clear
    <td>false
    <td>boolean
  <tr>
    <td>keybinds
    <td>
    <td>object
</table>
<hr id=core_mouse_updatebinds>
core_mouse_updatebinds(args)
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>clear
    <td>false
    <td>boolean
  <tr>
    <td>mousebinds
    <td>
    <td>object
</table>
<hr id=core_number_format>
core_number_format(args)
<ul>
  <li>Formats a number based on "new Intl.NumberFormat()" and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>decimals
    <td>core_storage_data['decimals']
    <td>number
  <tr>
    <td>number
    <td>
    <td>number
</table>
<hr id=core_random_boolean>
core_random_boolean(args)
<ul>
  <li>Returns a random boolean with optional probability manipulation.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>chance
    <td>.5
    <td>number
</table>
<hr id=core_random_hex>
core_random_hex(args)
<ul>
  <li>Returns a random hexadecimal string of length 6.
</ul>
<hr id=core_random_integer>
core_random_integer(args)
<ul>
  <li>Generates a random integer in a range.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>max
    <td>100
    <td>number
  <tr>
    <td>todo
    <td>'floor'
    <td>string
</table>
<hr id=core_random_key>
core_random_key(args)
<ul>
  <li>Returns a random object key.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>object
    <td>
    <td>object
</table>
<hr id=core_random_number>
core_random_number(args)
<ul>
  <li>Returns a random number in a range.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>multiplier
    <td>1
    <td>number
</table>
<hr id=core_random_rgb>
core_random_rgb()
<ul>
  <li>Returns an object containing random "blue", "green", and "red", as numbers between 0 and 255.
</ul>
<hr id=core_random_string>
core_random_string(args)
<ul>
  <li>Returns a random string from a string of available characters.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>characters
    <td>'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
    <td>string
  <tr>
    <td>length
    <td>100
    <td>number
</table>
<hr id=core_replace_multiple>
core_replace_multiple(args)
<ul>
  <li>Improvement of general string "replace()" that allows multiple replacements.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>patterns
    <td>
    <td>object
  <tr>
    <td>string
    <td>
    <td>string
</table>
<hr id=core_repo_init>
core_repo_init(args)
<ul>
  <li>Called by repository-specific <a href=main.htm#repo_init>repo_init()</a> function.
  <li>Sets up various repository-specific things needed for project function.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>beforeunload
    <td>false
    <td>boolean false or function
  <tr>
    <td>globals
    <td>{}
    <td>object
  <tr>
    <td>images
    <td>{}
    <td>object
  <tr>
    <td>info
    <td>''
    <td>string
  <tr>
    <td>keybinds
    <td>false
    <td>boolean false or object
  <tr>
    <td>link
    <td>false
    <td>boolean false or string link
  <tr>
    <td>menu
    <td>false
    <td>boolean
  <tr>
    <td>menu-block-events
    <td>true
    <td>boolean
  <tr>
    <td>mousebinds
    <td>false
    <td>boolean false or object
  <tr>
    <td>owner
    <td>'iterami'
    <td>string ID
  <tr>
    <td>reset
    <td>false
    <td>boolean false or function
  <tr>
    <td>root
    <td>'../index.htm'
    <td>string
  <tr>
    <td>storage
    <td>{}
    <td>object
  <tr>
    <td>storage-menu
    <td>''
    <td>string
  <tr>
    <td>tabs
    <td>{}
    <td>object
  <tr>
    <td>title
    <td>
    <td>string
  <tr>
    <td>ui
    <td>''
    <td>string
</table>
<hr id=core_repo_reset>
core_repo_reset()
<ul>
  <li>Calls "core_reset_todo()" if it has been set by the "reset" arg in <a href=#core_repo_init>core_repo_init()</a>.
</ul>
<hr id=core_requestpointerlock>
core_requestpointerlock(args)
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>'canvas'
    <td>string
</table>
<hr id=core_round>
core_round(args)
<ul>
  <li>Rounds a number to a specific number of decimal places and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>decimals
    <td>core_storage_data['decimals']
    <td>number
  <tr>
    <td>number
    <td>
    <td>number
</table>
<hr id=core_sort_custom>
core_sort_custom(args)
<ul>
  <li>Sorts a cloned array according to custom sorting rules and returns it.
  <li>Optionally reverses the array after sorting.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>array
    <td>
    <td>array
  <tr>
    <td>reverse
    <td>false
    <td>boolean
  <tr>
    <td>todo
    <td>
    <td>function
</table>
<hr id=core_sort_numbers>
core_sort_numbers(args)
<ul>
  <li>Sorts a cloned array numbers from smallest to biggest and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>array
    <td>
    <td>array
  <tr>
    <td>reverse
    <td>false
    <td>boolean
</table>
<hr id=core_sort_random>
core_sort_random(args)
<ul>
  <li>Sorts a cloned array randomly and returns it.
  <li>Cannot be reversed.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>array
    <td>
    <td>array
</table>
<hr id=core_sort_property>
core_sort_property(args)
<ul>
  <li>Sorts a cloned array based on a specified property and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>array
    <td>
    <td>array
  <tr>
    <td>property
    <td>
    <td>string ID
  <tr>
    <td>reverse
    <td>false
    <td>boolean
</table>
<hr id=core_sort_strings>
core_sort_strings(args)
<ul>
  <li>Sorts a cloned array of strings based on "localeCompare()" and returns it.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>array
    <td>
    <td>array
  <tr>
    <td>reverse
    <td>false
    <td>boolean
</table>
<hr id=core_storage_add>
core_storage_add(args)
<ul>
  <li>Adds information and defaults of a variable that should be stored in "window.localStorage".
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>prefix
    <td>core_repo_title + '-'
    <td>string
  <tr>
    <td>storage
    <td>
    <td>object
</table>
<hr id=core_storage_element_property>
core_storage_element_property(args)
<ul>
  <li>Returns "checked" when modifying checkboxes.
  <li>Returns "innerHTML" when modifying "div" or "span".
  <li>Returns "value" when modifying everything else.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>element
    <td>
    <td>element
  <tr>
    <td>key
    <td>
    <td>string
</table>
<hr id=core_storage_reset>
core_storage_reset()
<ul>
  <li>Optionally resets storage values to their original defaults.
</ul>
<hr id=core_storage_save>
core_storage_save()
<ul>
  <li>Saves current storage input values as new storage values.
</ul>
<hr id=core_storage_update>
core_storage_update(args)
<ul>
  <li>Updates settings inputs with current storage values.
  <li>Updates all by default, but can also only update specific keys.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>keys
    <td>false
    <td>boolean false or array of strings
</table>
<hr id=core_tab_create>
core_tab_create(args)
<ul>
  <li>Creates an HTML tab div and button for selecting the tab.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>content
    <td>
    <td>string
  <tr>
    <td>group
    <td>
    <td>string ID
  <tr>
    <td>id
    <td>
    <td>string ID
  <tr>
    <td>label
    <td>
    <td>string
</table>
<hr id=core_tab_switch>
core_tab_switch(args)
<ul>
  <li>Switches to a created tab.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=core_type>
core_type(args)
<ul>
  <li>Returns the type of "var".
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>type
    <td>'function'
    <td>string
  <tr>
    <td>var
    <td>
    <td>any
</table>
<hr id=core_type_convert>
core_type_convert(args)
<ul>
  <li>Converts variable depending on template variable type.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>template
    <td>
    <td>any
  <tr>
    <td>value
    <td>
    <td>any
</table>
<hr id=core_ui_update>
core_ui_update(args)
<ul>
  <li>Updates HTML element values depending on type, but only if the value is new.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>ids
    <td>{}
    <td>object
</table>
<hr id=core_uri>
core_uri(args)
<ul>
  <li>Returns an element converted to a data URI.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>'buffer'
    <td>string ID
  <tr>
    <td>quality
    <td>1
    <td>number
  <tr>
    <td>type
    <td>'image/png'
    <td>string
</table>
