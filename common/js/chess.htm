<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>chess.js</title>
<link href=../../../common/css/writings.css rel=stylesheet>

<a href=../../../index.htm>iterami</a>/<a href=../../index.htm>Docs.htm</a>/<a href=../htm.htm>common HTM Projects</a>/<a class=external href=https://github.com/iterami/common/blob/gh-pages/js/chess.js rel=noreferrer>chess.js</a>
<ul>
  <li><a href=#globals>Globals</a>
  <li>No requirements.
  <li>Functions:<ul>
    <li><a href=#chess_move>chess_check_column(args)</a>
    <li><a href=#chess_move>chess_check_diagonal(args)</a>
    <li><a href=#chess_move>chess_check_row(args)</a>
    <li><a href=#chess_move>chess_move(args)</a>
    <li><a href=#chess_new>chess_new(args)</a>
    <li><a href=#chess_threat>chess_threat(args)</a>
    <li><a href=#chess_validate>chess_validate(args)</a>
  </ul>
</ul>
<hr id=globals>
<table>
  <tr class=header>
    <td>Globals
    <td>Default
    <td>Type
  <tr>
    <td>chess_games
    <td>{}
    <td>object of objects
  <tr>
    <td>chess_pieces
    <td>[['♙', '♘', '♗', '♖', '♕', '♔'],['♟', '♞', '♝', '♜', '♛', '♚']]
    <td>array of arrays
</table>
<hr id=chess_check_column>
chess_check_column(args)
<ul>
  <li>Checks if there are any pieces in a column between loopstart and loopend.
  <li>Returns true if pieces are found, or else returns false.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>column
    <td>
    <td>number 0-7
  <tr>
    <td>loopend
    <td>
    <td>number 0-7
  <tr>
    <td>loopstart
    <td>
    <td>number 0-7
</table>
<hr id=chess_check_diagonal>
chess_check_diagonal(args)
<ul>
  <li>Checks if there are any pieces in a diagonal direction starting at a point.
  <li>Returns true if pieces are found, or else returns false.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>column
    <td>
    <td>number 0-7
  <tr>
    <td>dx
    <td>
    <td>number 0-7
  <tr>
    <td>dy
    <td>
    <td>number 0-7
  <tr>
    <td>loopstart
    <td>
    <td>number 0-7
  <tr>
    <td>loopend
    <td>
    <td>number 0-7
  <tr>
    <td>row
    <td>
    <td>number 0-7
</table>
<hr id=chess_check_row>
chess_check_column(args)
<ul>
  <li>Checks if there are any pieces in a row between loopstart and loopend.
  <li>Returns true if pieces are found, or else returns false.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>column
    <td>
    <td>number 0-7
  <tr>
    <td>loopend
    <td>
    <td>number 0-7
  <tr>
    <td>loopstart
    <td>
    <td>number 0-7
  <tr>
    <td>row
    <td>
    <td>number 0-7
</table>
<hr id=chess_move>
chess_move(args)
<ul>
  <li>Attempts to move the specified piece to the target location.
  <li>If the move is not valid, then nothing happens.
  <li>Returns the validation done by <a href=#chess_validate>chess_validate()</a>.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>piece-x
    <td>
    <td>number 0-7
  <tr>
    <td>piece-y
    <td>
    <td>number 0-7
  <tr>
    <td>target-x
    <td>
    <td>number 0-7
  <tr>
    <td>target-y
    <td>
    <td>number 0-7
</table>
<hr id=chess_new>
chess_new(args)
<ul>
  <li>Creates a new default chess board with the specified ID.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
</table>
<hr id=chess_threat>
chess_threat(args)
<ul>
  <li>Returns true if a square is threatened by the other player, or else returns false.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>piece-x
    <td>
    <td>number 0-7
  <tr>
    <td>piece-y
    <td>
    <td>number 0-7
  <tr>
    <td>player
    <td>
    <td>0 or 1
</table>
<hr id=chess_validate>
chess_validate(args)
<ul>
  <li>Checks if the requested move is valid or not.
  <li>Returns an object of properties describing the requested move.
  <li>Can optionally ignore current turn and check hypothetical moves.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>id
    <td>
    <td>string
  <tr>
    <td>piece-x
    <td>
    <td>number 0-7
  <tr>
    <td>piece-y
    <td>
    <td>number 0-7
  <tr>
    <td>player
    <td>
    <td>0 or 1
  <tr>
    <td>target-x
    <td>
    <td>number 0-7
  <tr>
    <td>target-y
    <td>
    <td>number 0-7
  <tr>
    <td>threat
    <td>false
    <td>boolean
</table>
