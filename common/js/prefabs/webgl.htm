<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>webgl.js Prefabs</title>
<link href=../../../../common/css/writings.css rel=stylesheet>

<a href=../../../../index.htm>iterami</a>/<a href=../../../index.htm>Docs.htm</a>/<a href=../../../index.htm>common</a>/<a href=../../guides/htm.htm>HTM</a>/<a class=external href=https://github.com/iterami/common/blob/gh-pages/js/prefabs/webgl.js rel=noopener>webgl.js Prefabs</a>
<ul>
  <li>Functions:<ul>
    <li><a href=#prefabs-webgl-cuboid>prefabs_webgl_cuboid(args)</a>
    <li><a href=#prefabs-webgl-cuboid-tree>prefabs_webgl_cuboid_tree(args)</a>
    <li><a href=#prefabs-webgl-ellipsoid>prefabs_webgl_ellipsoid(args)</a>
    <li><a href=#prefabs-webgl-lines-tree>prefabs_webgl_lines_tree(args)</a>
    <li><a href=#prefabs-webgl-skybox>prefabs_webgl_skybox(args)</a>
    <li><a href=#prefabs-webgl-tiles>prefabs_webgl_tiles(args)</a>
    <li><a href=#prefabs-webgl-tree-2d>prefabs_webgl_tree_2d(args)</a>
  </ul>
</ul>
<hr id=prefabs-webgl-cuboid>
prefabs_webgl_cuboid(args)
<ul>
  <li>Creates a cuboid prefab with specified properties.
  <li>Translation is from the center of the cuboid.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>all
    <td>{}
    <td>object
  <tr>
    <td>back
    <td>{}
    <td>object
  <tr>
    <td>bottom
    <td>{}
    <td>object
  <tr>
    <td>character
    <td>webgl_character_id
    <td>string ID
  <tr>
    <td>front
    <td>{}
    <td>object
  <tr>
    <td>groups
    <td>[]
    <td>array of string IDs
  <tr>
    <td>left
    <td>{}
    <td>object
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>properties
    <td>{}
    <td>object
  <tr>
    <td>random-colors
    <td>false
    <td>boolean
  <tr>
    <td>right
    <td>{}
    <td>object
  <tr>
    <td>size-x
    <td>1
    <td>number
  <tr>
    <td>size-y
    <td>1
    <td>number
  <tr>
    <td>size-z
    <td>1
    <td>number
  <tr>
    <td>top
    <td>{}
    <td>object
  <tr>
    <td>translate-x
    <td>0
    <td>number
  <tr>
    <td>translate-y
    <td>0
    <td>number
  <tr>
    <td>translate-z
    <td>0
    <td>number
</table>
<hr id=prefabs-webgl-cuboid-tree>
prefabs_webgl_cuboid_tree(args)
<ul>
  <li>Creates a cuboid tree prefab with the specified properties.
  <li>Translation is from the center of the bottom face of the trunk.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>character
    <td>webgl_character_id
    <td>string ID
  <tr>
    <td>collision-leaves
    <td>true
    <td>boolean
  <tr>
    <td>collision-trunk
    <td>true
    <td>boolean
  <tr>
    <td>leaves-size-x
    <td>10
    <td>number
  <tr>
    <td>leaves-size-y
    <td>10
    <td>number
  <tr>
    <td>leaves-size-z
    <td>10
    <td>number
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>translate-x
    <td>0
    <td>number
  <tr>
    <td>translate-y
    <td>0
    <td>number
  <tr>
    <td>translate-z
    <td>0
    <td>number
  <tr>
    <td>trunk-size-x
    <td>2
    <td>number
  <tr>
    <td>trunk-size-y
    <td>10
    <td>number
  <tr>
    <td>trunk-size-z
    <td>2
    <td>number
  <tr>
    <td>vertex-colors-leaves
    <td>array[]
    <td>array of numbers
  <tr>
    <td>vertex-colors-trunk
    <td>array[]
    <td>array of numbers
</table>
<hr id=prefabs-webgl-ellipsoid>
prefabs_webgl_ellipsoid(args)
<ul>
  <li>Creates a ellipsoid prefab with specified properties.
  <li>Translation is from the center of the ellipsoid.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>character
    <td>webgl_character_id
    <td>string ID
  <tr>
    <td>color0
    <td>array[]
    <td>array of numbers
  <tr>
    <td>color1
    <td>array[]
    <td>array of numbers
  <tr>
    <td>groups
    <td>[]
    <td>array of string IDs
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>radius-x
    <td>5
    <td>number
  <tr>
    <td>radius-y
    <td>5
    <td>number
  <tr>
    <td>radius-z
    <td>5
    <td>number
  <tr>
    <td>slices-latitude
    <td>10
    <td>number
  <tr>
    <td>slices-longitude
    <td>10
    <td>number
  <tr>
    <td>translate-x
    <td>0
    <td>number
  <tr>
    <td>translate-y
    <td>0
    <td>number
  <tr>
    <td>translate-z
    <td>0
    <td>number
</table>
<hr id=prefabs-webgl-lines-tree>
prefabs_webgl_lines_tree(args)
<ul>
  <li>Creates a lines tree prefab with the specified properties.
  <li>Translation is from the center of the bottom of the trunk.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>character
    <td>webgl_character_id
    <td>string ID
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>translate-x
    <td>0
    <td>number
  <tr>
    <td>translate-y
    <td>0
    <td>number
  <tr>
    <td>translate-z
    <td>0
    <td>number
  <tr>
    <td>trunk-branch-max
    <td>4
    <td>number
  <tr>
    <td>trunk-branch-min
    <td>0
    <td>number
  <tr>
    <td>trunk-count-max
    <td>10
    <td>number
  <tr>
    <td>trunk-count-min
    <td>1
    <td>number
  <tr>
    <td>trunk-length
    <td>10
    <td>number
  <tr>
    <td>trunk-width-max
    <td>2
    <td>number
  <tr>
    <td>trunk-width-min
    <td>1
    <td>number
  <tr>
    <td>vertex-colors-leaves
    <td>array[]
    <td>array of numbers
  <tr>
    <td>vertex-colors-trunk
    <td>array[]
    <td>array of numbers
</table>
<hr id=prefabs-webgl-skybox>
prefabs_webgl_skybox(args)
<ul>
  <li>Creates a skybox prefab around the "webgl_player_id" camera.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>bottom-color-bottom
    <td>false
    <td>boolean false or array of numbers
  <tr>
    <td>bottom-color-top
    <td>boolean false or array of numbers
    <td>
  <tr>
    <td>character
    <td>webgl_character_id
    <td>string ID
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>random-colors
    <td>false
    <td>boolean
  <tr>
    <td>rotate-x
    <td>0
    <td>number
  <tr>
    <td>rotate-y
    <td>0
    <td>number
  <tr>
    <td>rotate-z
    <td>0
    <td>number
  <tr>
    <td>sides
    <td>3
    <td>number
  <tr>
    <td>size
    <td>99
    <td>number
  <tr>
    <td>top-color-bottom
    <td>false
    <td>boolean false or array of numbers
  <tr>
    <td>top-color-top
    <td>boolean false or array of numbers
    <td>
</table>
<hr id=prefabs-webgl-tiles>
prefabs_webgl_tiles(args)
<ul>
  <li>Creates a randomized assortment of tile prefabs.
</ul>
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>prefix
    <td>entity_id_count
    <td>number or string
  <tr>
    <td>rotate-x
    <td>0
    <td>number
  <tr>
    <td>rotate-y
    <td>0
    <td>number
  <tr>
    <td>rotate-z
    <td>0
    <td>number
  <tr>
    <td>tiles
    <td>
    <td>array of tile objects
  <tr>
    <td>tiles-max
    <td>5
    <td>number
  <tr>
    <td>tiles-min
    <td>1
    <td>number
  <tr>
    <td>translate-x
    <td>0
    <td>number
  <tr>
    <td>translate-y
    <td>0
    <td>number
  <tr>
    <td>translate-z
    <td>0
    <td>number
</table>
<hr id=prefabs-webgl-tree-2d>
prefabs_webgl_tree_2d(args)
<table>
  <tr class=header>
    <td>Arg
    <td>Default
    <td>Type
  <tr>
    <td>billboard
    <td>false
    <td>boolean false or axis string
  <tr>
    <td>color-base
    <td>[.4, .2, 0, 1, .4, .2, 0, 1, .4, .2, 0, 1]
    <td>array of numbers
  <tr>
    <td>color-leaf
    <td>[.1, .3, .1, 1, .1, .3, .1, 1, .1, .3, .1, 1]
    <td>array of numbers
  <tr>
    <td>dx
    <td>0
    <td>number
  <tr>
    <td>dy
    <td>0
    <td>number
  <tr>
    <td>dz
    <td>0
    <td>number
  <tr>
    <td>id
    <td>
    <td>string ID
  <tr>
    <td>x
    <td>0
    <td>number
  <tr>
    <td>y
    <td>0
    <td>number
  <tr>
    <td>z
    <td>0
    <td>number
</table>
