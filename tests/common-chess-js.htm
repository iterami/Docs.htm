<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>common chess.js Tests</title>
<link href=../../common/css/core.css rel=stylesheet>
<link href=../../common/css/chess.css rel=stylesheet>
<style>
.chess,
.inline{
    display: inline-block;
    vertical-align: top;
}
.taken{
    background: #fff;
    color: #000;
}
</style>

<a href=../../index.htm>iterami</a>/<a href=../index.htm>Docs.htm</a>/<a href=../repos/index.htm>Repo</a> Tests/<a href=../../common/index.htm>common</a>/<a href=../../common/js/chess.js>chess.js</a><br>
<table class="center chess" id=board></table>
<table class=inline>
  <tr>
    <td class=big colspan=2><span id=turn></span>'s turn
  <tr class="big taken">
    <td colspan=2><div id=black-pieces-taken></div><div id=white-pieces-taken></div>
  <tr class=header>
    <td>chess_move()
    <td>Response
  <tr>
    <td>en-passant
    <td id=en-passant>
  <tr>
    <td>en-passant-taken
    <td id=en-passant-taken>
  <tr>
    <td>king-moved
    <td id=king-moved>
  <tr>
    <td>pawn-promote
    <td id=pawn-promote>
  <tr>
    <td>rook-long-moved
    <td id=rook-long-moved>
  <tr>
    <td>rook-short-moved
    <td id=rook-short-moved>
  <tr>
    <td>valid
    <td id=valid>
  <tr class=header>
    <td>Black Player
    <td>State
  <tr>
    <td>king-moved
    <td id=black-king-moved>
  <tr>
    <td>pawn-promote
    <td><select onchange="update_board()" id=black-pawn-promote>
      <option value=2>Bishop</option>
      <option value=1>Knight</option>
      <option value=4 selected>Queen</option>
      <option value=3>Rook</option>
    </select>
  <tr>
    <td>rook-long-moved
    <td id=black-rook-long-moved>
  <tr>
    <td>rook-short-moved
    <td id=black-rook-short-moved>
  <tr class=header>
    <td>White Player
    <td>State
  <tr>
    <td>king-moved
    <td id=white-king-moved>
  <tr>
    <td>pawn-promote
    <td><select onchange="update_board()" id=white-pawn-promote>
      <option value=2>Bishop</option>
      <option value=1>Knight</option>
      <option value=4 selected>Queen</option>
      <option value=3>Rook</option>
    </select>
  <tr>
    <td>rook-long-moved
    <td id=white-rook-long-moved>
  <tr>
    <td>rook-short-moved
    <td id=white-rook-short-moved>
  <tr>
    <td colspan=2><input onclick="reset_board(true)" type=button value=Reset><input onclick="remove_pawns()" type=button value="Remove Pawns"><input onclick="update_board()" type=button value=Update>
</table>

<script src=../../common/js/chess.js></script>
<script>
function remove_pawns(){
    if(!globalThis.confirm('Remove all pawns?')){
        return false;
    }

    for(let y = 1; y < 9; y++){
        for(let x = 1; x < 9; x++){
            const piece = document.getElementById(y + '-' + x).textContent
            if(piece === chess_pieces[0][0] || piece === chess_pieces[1][0]){
                chess_games['test']['board'][y - 1][x - 1] = '';
            }
        }
    }

    update_board();
}

function reset_board(reset){
    if(reset && !globalThis.confirm('Reset the entire board?')){
        return false;
    }

    chess_new({
      'id': 'test',
    });
    selected_x = -1;
    selected_y = -1;
    update_board();
}

function select_square(id){
    if(selected_x > -1){
        document.getElementById(selected_y + '-' + selected_x).style.color = '#000';
    }

    const square_x = Number(id[2]);
    const square_y = Number(id[0]);

    if(selected_x === square_x && selected_y === square_y){
        selected_x = -1;
        selected_y = -1;

    }else if(selected_x === -1 || selected_y === -1){
        if(chess_games['test']['board'][square_y - 1][square_x - 1].length === 1){
            selected_x = square_x;
            selected_y = square_y;
        }

    }else{
        const move = chess_move({
          'id': 'test',
          'piece-x': selected_x,
          'piece-y': selected_y,
          'target-x': square_x,
          'target-y': square_y,
        });
        for(const property in move){
            const element = document.getElementById(property);
            if(element){
                element.textContent = move[property];
            }
        }

        if(move['valid']){
            selected_x = -1;
            selected_y = -1;

            update_board();

        }else{
            selected_x = -1;
            selected_y = -1;
        }
    }

    if(selected_x > -1){
        document.getElementById(selected_y + '-' + selected_x).style.color = '#0a0';
    }
}

function update_board(){
    chess_games['test']['players'][1]['pawn-promote'] = Number(document.getElementById('black-pawn-promote').value);
    chess_games['test']['players'][0]['pawn-promote'] = Number(document.getElementById('white-pawn-promote').value);

    document.getElementById('turn').textContent = chess_games['test']['player']
      ? 'Black'
      : 'White';
    document.getElementById('black-king-moved').textContent = chess_games['test']['players'][1]['king-moved'];
    document.getElementById('black-rook-long-moved').textContent = chess_games['test']['players'][1]['rook-long-moved'];
    document.getElementById('black-rook-short-moved').textContent = chess_games['test']['players'][1]['rook-short-moved'];
    document.getElementById('black-pieces-taken').textContent = chess_games['test']['players'][1]['pieces-taken'];
    document.getElementById('white-king-moved').textContent = chess_games['test']['players'][0]['king-moved'];
    document.getElementById('white-rook-long-moved').textContent = chess_games['test']['players'][0]['rook-long-moved'];
    document.getElementById('white-rook-short-moved').textContent = chess_games['test']['players'][0]['rook-short-moved'];
    document.getElementById('white-pieces-taken').textContent = chess_games['test']['players'][0]['pieces-taken'];
    for(let y = 1; y < 9; y++){
        for(let x = 1; x < 9; x++){
            document.getElementById(y + '-' + x).innerHTML = chess_games['test']['board'][y - 1][x - 1] || '&nbsp;';
        }
    }
}

let selected_x = -1;
let selected_y = -1;

let board_html = '';
for(let y = 1; y < 9; y++){
    board_html += '<tr>';
    for(let x = 1; x < 9; x++){
        board_html += '<td id="' + y + '-' + x + '" onclick="select_square(this.id)">';
    }
}
document.getElementById('board').innerHTML = board_html;

reset_board(false);
</script>
