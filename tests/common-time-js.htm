<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>common time.js Tests</title>
<link href=../../common/css/core.css rel=stylesheet>

<a href=../../index.htm>iterami</a>/<a href=../index.htm>Docs.htm</a>/Tests/<a href=../../common/js/time.js>common time.js</a>
<table class=center>
  <thead>
    <tr class=header>
      <td>Function
      <td>Args
      <td>Expected
      <td>Returned
      <td>Test
  <tbody id=results>
</table>

<script src=../../common/js/core.js></script>
<script src=../../common/js/test.js></script>
<script src=../../common/js/time.js></script>
<script>
function repo_init(){
    core_repo_init({
      'title': 'Docs.htm',
    });

    const tests = [
      {
        'args': {
          'date': {
            'date': 21,
            'hour': 16,
            'millisecond': 0,
            'minute': 20,
            'month': 2,
            'second': 0,
            'year': 2013,
          },
        },
        'expect': 1361463600000,
        'function': 'date_to_timestamp',
      },
      {
        'args': {
          'now': 9876543210,
          'target': 123456789,
        },
        'expect': '- 00-03-22 21:11:26',
        'function': 'time_diff',
      },
      {
        'args': {
          'date': {
            'date': 21,
            'hour': 16,
            'millisecond': 0,
            'minute': 20,
            'month': 2,
            'second': 0,
            'year': 2013,
          },
        },
        'expect': '2013-02-21 16:20:00',
        'function': 'time_format',
      },
      {
        'args': void 0,
        'expect': -2211753600000,
        'function': 'time_from_inputs',
      },
    ];

    let results = '';
    for(let test in tests){
        let test_args = {};
        Object.assign(
          test_args,
          tests[test]
        );
        test_args['args'] = {};
        Object.assign(
          test_args['args'],
          tests[test]['args']
        );
        const result = test_function(test_args);
        const expect = core_type({
          'var': tests[test]['expect'],
        })
          ? tests[test]['expect'].toString()
          : JSON.stringify(
            tests[test]['expect'],
            void 0,
            1
          );

        results += '<tr ' + (!result['test'] ? ' style=background:#600' : '') + '>'
          + '<td><a href=../common/js/time.htm#' + tests[test]['function'] + '>' + tests[test]['function'] + '()</a>'
          + '<td>' + JSON.stringify(
            tests[test]['args'],
            null,
            1
          ) + '<td>' + expect
          + '<td>' + JSON.stringify(
            result['returned'],
            null,
            1
          ) + '<td>' + result['test'];
    }
    document.getElementById('results').innerHTML = results;
}
</script>
