<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>Mouse Tests</title>
<link href=../../common/css/core.css rel=stylesheet>

<a href=../../index.htm>iterami</a>/<a href=../index.htm>Docs.htm</a>/<a href=index.htm>Tests</a>/Mouse
<table>
  <thead>
    <tr>
      <td>core_type(event)
      <td id=event>
    <tr>
      <td>event.type
      <td id=type>
    <tr class=header>
      <td>core_mouse
      <td>Properties
  <tbody id=core_mouse></tbody>
    <tr>
      <td>deltaY
      <td id=deltaY>
    <tr class=header>
      <td>core_mouse['todo']
      <td>Properties
  <tbody id=core_mouse_todo>
</table>

<script src=../../common/js/core.js></script>
<script>
function repo_init(){
    core_repo_init({
      'mousebinds': {
        'contextmenu': {
          'preventDefault': true,
        },
      },
      'title': 'Docs.htm',
    });

    let html = '';
    for(const value in core_mouse){
        html += '<tr><td>' + value + '<td id=' + value + '>' + core_mouse[value];
    }
    document.getElementById('core_mouse').innerHTML = html;
    html = '';
    for(const value in core_mouse['todo']){
        html += '<tr><td>' + value + '<td id=' + value + '>' + core_mouse['todo'][value];
    }
    document.getElementById('core_mouse_todo').innerHTML = html;

    update_mouse();
    globalThis.addEventListener(
      'mousedown',
      update_mouse
    );
    globalThis.addEventListener(
      'mousemove',
      update_mouse
    );
    globalThis.addEventListener(
      'mouseup',
      update_mouse
    );
    globalThis.addEventListener(
      'touchend',
      update_mouse
    );
    globalThis.addEventListener(
      'touchmove',
      update_mouse
    );
    globalThis.addEventListener(
      'touchstart',
      update_mouse
    );
    globalThis.addEventListener(
      'wheel',
      update_mouse
    );
}

function update_mouse(event){
    core_ui_update({
      'ids': {
        ...core_mouse,
        ...core_mouse['todo'],
        'deltaY': event?.deltaY,
        'event': core_type(event),
        'type': event?.type,
      },
    });
}
</script>
