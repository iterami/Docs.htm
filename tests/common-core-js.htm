<!doctype html>
<meta charset=utf-8>
<meta content="width=device-width,initial-scale=1" name=viewport>
<title>common core.js Tests</title>
<link href=../../common/css/core.css rel=stylesheet>

<a href=../../index.htm>iterami</a>/<a href=../index.htm>Documentation.htm</a>/Tests/<a href=../../common/js/core.js>common core.js</a>
<table class=center>
  <thead>
    <tr class=header>
      <td>Function
      <td>Args
      <td>Expected
      <td>Returned
      <td>Test
  <tbody id=results>
</table>

<script src=../../common/js/core.js></script>
<script>
function repo_init(){
    core_repo_init({
      'title': 'common',
    });

    const tests = [
      {
        'args': void 0,
        'expect': {},
        'function': 'core_args',
      },
      {
        'args': {
          'args': {},
          'defaults': {
            'test-default-arg': 7,
          },
        },
        'expect': {
          'test-default-arg': 7,
        },
        'function': 'core_args',
      },
      {
        'args': {
          'max': 360,
          'min': 0,
          'value': 450,
        },
        'expect': 360,
        'function': 'core_clamp',
      },
      {
        'args': {
          'max': 360,
          'min': 0,
          'value': 450,
          'wrap': true,
        },
        'expect': 90,
        'function': 'core_clamp',
      },
      {
        'args': {
          'date': {
            'date': 21,
            'hour': 16,
            'millisecond': 0,
            'minute': 20,
            'month': 2,
            'second': 0,
            'year': 2013,
          },
        },
        'expect': 1361463600000,
        'function': 'core_date_to_timestamp',
      },
      {
        'args': {
          'degrees': 145,
        },
        'expect': 2.5307274,
        'function': 'core_degrees_to_radians',
      },
      {
        'args': {
          'x0': 4,
          'y0': 8,
          'z0': 15,
          'x1': 16,
          'y1': 23,
          'z1': 42,
        },
        'expect': 33.1360831,
        'function': 'core_distance',
      },
      {
        'args': void 0,
        'expect': 0,
        'function': 'core_entity_create',
      },
      {
        'args': {
          'length': 5,
          'x0': 0,
          'y0': 0,
          'z0': 0,
          'x1': 1,
          'y1': 0,
          'z1': 1,
        },
        'expect': {
          'x': 3.5355338,
          'y': 0,
          'z': 3.5355338,
        },
        'function': 'core_fixed_length_line',
      },
      {
        'args': void 0,
        'expect': {},
        'function': 'core_handle_defaults',
      },
      {
        'args': {
          'var': 5,
        },
        'expect': 5,
        'function': 'core_handle_defaults',
      },
      {
        'args': {
          'hex': '#123',
        },
        'expect': 'rgb(17, 34, 51)',
        'function': 'core_hex_to_rgb',
      },
      {
        'args': {
          'hex': '#123456',
        },
        'expect': 'rgb(18, 52, 86)',
        'function': 'core_hex_to_rgb',
      },
      {
        'args': {
          'parent': document.body,
          'properties': {
            'id': 'core_html-element',
          },
        },
        'expect': function(returned){
            return document.getElementById('core_html-element') === returned;
        },
        'function': 'core_html',
      },
      {
        'args': {
          'string': '<u>test</u>',
        },
        'expect': '&lt;u&gt;test&lt;/u&gt;',
        'function': 'core_html_format',
      },
      {
        'args': {
          'id': 'core_html-element',
          'properties': {
            'id': 'core_html_modify-element',
          },
        },
        'expect': function(returned){
            if(document.getElementById('core_html_modify-element')){
                return true;
            }
            return false;
        },
        'function': 'core_html_modify',
      },
      {
        'args': void 0,
        'expect': {
          '0': 0,
          '1': 0,
          '2': 0,
          '3': 0,
          '4': 0,
          '5': 0,
          '6': 0,
          '7': 0,
          '8': 0,
          '9': 0,
          '10': 0,
          '11': 0,
          '12': 0,
          '13': 0,
          '14': 0,
          '15': 0,
        },
        'function': 'core_matrix_create',
      },
      {
        'args': {
          'multiplier': 2,
          'x0': 0,
          'y0': 0,
          'x1': 1,
          'y1': 1,
        },
        'expect': {
          'angle': .7853982,
          'x': 1.4142136,
          'y': 1.4142136,
        },
        'function': 'core_move_2d',
      },
      {
        'args': {
          'speed': 2,
          'dx': 1,
          'dy': 1,
        },
        'expect': '?',
        'function': 'core_move_2d_diagonal',
      },
      {
        'args': {
          'angle': 45,
          'multiplier': 2,
        },
        'expect': {
          'x': 1.4142136,
          'z': 1.4142136,
        },
        'function': 'core_move_3d',
      },
      {
        'args': {
          'number': '123456.789',
        },
        'expect': '123,456.789',
        'function': 'core_number_format',
      },
      {
        'args': {
          'x0': 0,
          'y0': 0,
          'x1': 5,
          'y1': 5,
        },
        'expect': .7853982,
        'function': 'core_point_angle',
      },
      {
        'args': {
          'radians': .7853981633974483,
        },
        'expect': 45,
        'function': 'core_radians_to_degrees',
      },
      {
        'args': {
          'max': 1,
        },
        'expect': 0,
        'function': 'core_random_integer',
      },
      {
        'args': {
          'h0': 10,
          'w0': 10,
          'x0': 5,
          'y0': 5,
          'h1': 10,
          'w1': 10,
          'x1': 0,
          'y1': 0,
        },
        'expect': true,
        'function': 'core_rectangle_overlap',
      },
      {
        'args': {
          'h0': 10,
          'w0': 10,
          'x0': 15,
          'y0': 15,
          'h1': 10,
          'w1': 10,
          'x1': 0,
          'y1': 0,
        },
        'expect': false,
        'function': 'core_rectangle_overlap',
      },
      {
        'args': {
          'patterns': {
            'it': '',
          },
          'string': 'iterami iterami iterami',
        },
        'expect': 'erami erami erami',
        'function': 'core_replace_multiple',
      },
      {
        'args': {
          'decimals': 0,
          'number': 123.456,
        },
        'expect': 123,
        'function': 'core_round',
      },
      {
        'args': {
          'decimals': 1,
          'number': 123.456,
        },
        'expect': 123.5,
        'function': 'core_round',
      },
      {
        'args': {
          'array': [
            8,
            16,
            4,
            42,
            23,
            15,
          ],
        },
        'expect': [
          4,
          8,
          15,
          16,
          23,
          42,
        ],
        'function': 'core_sort_numbers',
      },
      {
        'args': {
          'array': [
            'eight',
            'sixteen',
            'four',
            'fortytwo',
            'twentythree',
            'fifteen',
          ],
        },
        'expect': [
          'eight',
          'fifteen',
          'fortytwo',
          'four',
          'sixteen',
          'twentythree',
        ],
        'function': 'core_sort_strings',
      },
      {
        'args': {
          'now': 9876543210,
          'target': 123456789,
        },
        'expect': '- 00-03-22 21:11:26',
        'function': 'core_time_diff',
      },
      {
        'args': {
          'date': {
            'date': 21,
            'hour': 16,
            'millisecond': 0,
            'minute': 20,
            'month': 2,
            'second': 0,
            'year': 2013,
          },
        },
        'expect': '2013-02-21 16:20:00',
        'function': 'core_time_format',
      },
      {
        'args': {
          'number': 7,
        },
        'expect': -2211753600000,
        'function': 'core_time_from_inputs',
      },
      {
        'args': {
          'number': 7,
        },
        'expect': '07',
        'function': 'core_two_digits',
      },
    ];

    let results = '';
    for(let test in tests){
        let test_args = {};
        Object.assign(
          test_args,
          tests[test]
        );
        test_args['args'] = {};
        Object.assign(
          test_args['args'],
          tests[test]['args']
        );
        const result = core_test_function(test_args);
        const expect = core_type({
          'var': tests[test]['expect'],
        })
          ? tests[test]['expect'].toString()
          : JSON.stringify(
            tests[test]['expect'],
            void 0,
            1
          );

        results += '<tr ' + (!result['test'] ? ' style=background:#600' : '') + '>'
          + '<td><a class=external href=https://github.com/iterami/Documentation.htm/blob/gh-pages/common/js/core.md#' + tests[test]['function'] + 'args rel=noopener>' + tests[test]['function'] + '()</a>'
          + '<td>' + JSON.stringify(
            tests[test]['args'],
            null,
            1
          ) + '<td>' + expect
          + '<td>' + JSON.stringify(
            result['returned'],
            null,
            1
          ) + '<td>' + result['test'];
    }
    document.getElementById('results').innerHTML = results;
}
</script>
